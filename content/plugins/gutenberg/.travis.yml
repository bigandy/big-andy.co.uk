sudo: false

language: php

notifications:
  email:
    on_success: never
    on_failure: change

cache:
  directories:
    - vendor
    - $HOME/.composer/cache

before_install:
  - nvm install 7 && nvm use 7

matrix:
  include:
    - php: 7.1
      env: WP_VERSION=latest
    - php: 5.6
      env: WP_VERSION=latest
    - php: 5.2
      env: WP_VERSION=latest
    - php: 5.6
      env: TRAVISCI=phpcs
    - php: 7.1
      env: TRAVISCI=js

before_script:
  - export PATH="$HOME/.composer/vendor/bin:$PATH"
  - |
    if [[ ! -z "$WP_VERSION" ]] ; then
      bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION
      if [[ ${TRAVIS_PHP_VERSION:0:2} == "5." ]]; then
        mkdir -p $HOME/phpunit-bin
        wget -O $HOME/phpunit-bin/phpunit https://phar.phpunit.de/phpunit-4.8.phar
        chmod +x $HOME/phpunit-bin/phpunit
        export PATH=$PATH:$HOME/phpunit-bin/
      else
        composer global require "phpunit/phpunit=5.7.*"
      fi
    fi
  - |
    if [[ "$TRAVISCI" == "phpcs" ]] ; then
      composer install
    fi

script:
  - |
    if [[ ! -z "$WP_VERSION" ]] ; then
      # Run the build because otherwise there will be a bunch of warnings about
      # failed `stat` calls from `filemtime()`.
      npm install || exit 1
      npm run build || exit 1
      # Make sure phpegjs parser is up to date
      node bin/create-php-parser.js || exit 1
      if ! git diff --quiet --exit-code lib/parser.php; then
        echo 'ERROR: The PEG parser has been updated, but the generated PHP version'
        echo '       (lib/parser.php) has not.  Run `bin/create-php-parser.js` and'
        echo '       commit the resulting changes to resolve this.'
        sleep .2 # Otherwise Travis doesn't want to print the whole message
        exit 1
      fi
      # Check parser syntax
      php lib/parser.php || exit 1
      # Run PHPUnit tests
      phpunit || exit 1
      WP_MULTISITE=1 phpunit || exit 1
    fi
  - |
    if [[ "$TRAVISCI" == "phpcs" ]] ; then
      ./vendor/bin/phpcs
    fi
  - |
    if [[ "$TRAVISCI" == "js" ]] ; then
      npm install || exit 1
      npm run ci || exit 1
    fi

before_deploy:
  - npm install && npm run build-storybook

deploy:
  provider: surge
  project: ./storybook-static/
  domain: gutenberg-devdoc.surge.sh
  skip_cleanup: true
