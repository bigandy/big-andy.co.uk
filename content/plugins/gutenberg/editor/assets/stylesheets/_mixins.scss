@mixin break-huge() {
	@media ( min-width: #{ ( $break-huge ) } ) {
		@content;
	}
}

@mixin break-wide() {
	@media ( min-width: #{ ( $break-wide ) } ) {
		@content;
	}
}

@mixin break-large() {
	@media ( min-width: #{ ( $break-large ) } ) {
		@content;
	}
}

@mixin break-medium() {
	@media ( min-width: #{ ( $break-medium ) } ) {
		@content;
	}
}

@mixin break-small() {
	@media ( min-width: #{ ( $break-small ) } ) {
		@content;
	}
}

@mixin break-mobile() {
	@media ( min-width: #{ ( $break-mobile ) } ) {
		@content;
	}
}

/**
 * Long content fade mixin
 *
 * Creates a fading overlay to signify that the content is longer
 * than the space allows.
 */

@mixin long-content-fade( $direction: right, $size: 20%, $color: #fff, $edge: 0px, $z-index: false) {
	content: '';
	display: block;
	position: absolute;
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	pointer-events: none;

	@if $z-index {
		z-index: $z-index;
	}

	@if $direction == 'bottom' {
		background: linear-gradient( to top, rgba( $color, 0 ), $color 90% );
		left: $edge;
		right: $edge;
		top: $edge;
		bottom: calc(100% - $size);
		width: auto;
	}

	@if $direction == 'top' {
		background: linear-gradient( to bottom, rgba( $color, 0 ), $color 90% );
		top: calc(100% - $size);
		left: $edge;
		right: $edge;
		bottom: $edge;
		width: auto;
	}

	@if $direction == 'left' {
		background: linear-gradient( to left, rgba( $color, 0 ), $color 90% );
		top: $edge;
		left: $edge;
		bottom: $edge;
		right: auto;
		width: $size;
		height: auto;
	}

	@if $direction == 'right' {
		background: linear-gradient( to right, rgba( $color, 0 ), $color 90% );
		top: $edge;
		bottom: $edge;
		right: $edge;
		left: auto;
		width: $size;
		height: auto;
	}
}

/**
 * Editor Width mixin
 *
 * This mixin seeks to take the vinegar out of the responsive alignments in the editor.
 */

@mixin editor-width( $width ) {
	@media ( min-width: #{ ( $width ) } ) {
		@content;
	}
}

$visual-editor-max-width-padding: $visual-editor-max-width + $block-mover-padding-visible + $block-mover-padding-visible;
$float-margin: calc( 50% - #{ $visual-editor-max-width-padding / 2 } );
